---
import MapPin from "phosphor-astro/MapPin.astro";
import Student from "phosphor-astro/Student.astro";
import Football from "phosphor-astro/Football.astro";
import Code from "phosphor-astro/Code.astro";
import Database from "phosphor-astro/Database.astro";
import Java from "phosphor-astro/Coffee.astro";

import InstagramLogo from "phosphor-astro/InstagramLogo.astro";
import WhatsappLogo from "phosphor-astro/WhatsappLogo.astro";
import CaretRight from "phosphor-astro/CaretRight.astro";

const Cards = [
	{
		id: "location",
		title: "Pilar, Buenos Aires",
		icon: MapPin,
	},
	{
		id: "Whatsapp",
		title: "Whatsapp",
		icon: WhatsappLogo,
		ref: "https://wa.me/5491128611753",
	},
	{
		id: "Instagram",
		title: "Instagram",
		icon: InstagramLogo,
		ref: "https://www.instagram.com/francolacava/",
	},
	{
		id: "student",
		title: "Estudiante de Ciencias de Datos en la UBA",
		icon: Student,
	},
	{
		id: "rugby",
		title: "Juego al rugby en Deportiva Francesa",
		icon: Football,
	},
	{
		id: "web",
		title: "Herramientas de desarrollo web",
		icon: Code,
	},
];

const hiddenCards = [
	{
		id: "React",
		title: "React",
		image: "./react.png",
		type: "image",
	},
	{
		id: "Javascript",
		title: "Javascript",
		image: "./Javascript.png",
		type: "image",
	},
	{
		id: "Tailwind",
		title: "Tailwind",
		image: "./tailwind.png",
		type: "image",
	},
	{
		id: "Astro",
		title: "Astro",
		image: "./astro.png",
		type: "image",
	},
	{
		id: "Database",
		title: "Database (mongoDB)",
		icon: Database,
	},
	{
		id: "Java",
		title: "Java",
		icon: Java,
	},
];
---

<style>
	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(-20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@keyframes fadeOut {
		from {
			opacity: 1;
			transform: translateY(0);
		}
		to {
			opacity: 0;
			transform: translateY(-20px);
		}
	}

	.hiddenCard {
		opacity: 0;
	}

	.hiddenCard.show {
		animation: fadeIn 0.3s ease-out forwards;
	}

	.hiddenCard.hide {
		animation: fadeOut 0.3s ease-out forwards;
	}
</style>

<script>
	const button = document.getElementById("web");
	const cards = document.querySelectorAll(".hiddenCard");
	let isShowing = false;

	button?.addEventListener("click", () => {
		isShowing = !isShowing;
		cards.forEach((card) => {
			if (isShowing) {
				requestAnimationFrame(() => {
					card.classList.add("show");
					card.classList.remove("hide");
				});
			} else {
				card.classList.add("hide");
				card.classList.remove("show");
			}
		});
	});
</script>

<div class="flex text-white mt-20">
	<div
		class="flex flex-col lg:flex-row w-[90%] max-w-7xl min-h-[700px] m-auto bg-[#1a1a1a]/40 backdrop-blur-sm rounded-2xl border border-white/10 shadow-xl p-4"
	>
		<div class="flex flex-col justify-center items-center">
			<img
				src="./personal.jpg"
				alt="personal"
				class="size-56 lg:size-96 rounded-full m-auto object-cover border-4 border-white/10 shadow-2xl hover:scale-105 transition-transform duration-300"
			/>
		</div>

		<div class="flex flex-col justify-center gap-8 p-4">
			<h1
				class="text-4xl lg:text-6xl font-bold bg-gradient-to-r from-white to-gray-500 bg-clip-text text-transparent"
			>
				Franco Lacava Botte
			</h1>
			<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
				{
					Cards.map((card) => (
						<div
							class={`flex gap-3 p-4 rounded-xl bg-white/5 hover:bg-white/10 transition-colors items-center duration-300 border border-white/5
${card.ref || card.id == "web" ? "cursor-pointer" : "cursor-default"}
							`}
							id={`${card.id}`}
							onclick={
								card.ref && `window.location.href='${card.ref}'`
							}
						>
							<card.icon class="size-6" />
							<p class="text-lg text-gray-200">{card.title}</p>
							{(card.ref || card.id == "web") && (
								<CaretRight class="size-6" />
							)}
						</div>
					))
				}
				<div class="grid grid-cols-2 w-full col-span-2 gap-4">
					{
						hiddenCards.map((card) => (
							<div
								class="flex cursor-default gap-3 p-4 rounded-xl bg-white/5 hover:bg-white/10 transition-colors duration-300 border border-white/5 hiddenCard items-center"
								id={`${card.id}`}
							>
								{card.icon ? (
									<card.icon class="size-6" />
								) : card.type == "svg" ? (
									<Fragment set:html={card.image} />
								) : (
									<img
										src={card.image}
										alt={card.title}
										class="w-6"
									/>
								)}
								<p class="text-lg text-gray-200">
									{card.title}
								</p>
							</div>
						))
					}
				</div>
			</div>
			<div
				class="flex px-6 py-3 rounded-xl bg-white/5 hover:bg-white/10 transition-colors duration-300 w-fit justify-center items-center gap-3 cursor-pointer border border-white/5"
				onclick={`window.location.href='#proyects'`}
			>
				<p class="text-2xl font-light">Conocer mis proyectos</p>
				<CaretRight class="size-6" />
			</div>
		</div>
	</div>
</div>
